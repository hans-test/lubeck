language: generic
sudo: false

cache:
    directories:
        - $HOME/.ghc
        - $HOME/.cabal
        - $HOME/.stack

before_install:
# Download and unpack the stack executable
- mkdir -p ~/.local/bin
- export PATH=$HOME/.local/bin:$PATH
- travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
- make setup
- make setup

script:
  - make
  # - stack --no-terminal --skip-ghc-check test
#
# matrix:
#   fast_finish: true
#   include:
#     - env: BUILD=cabal CABALVER=1.24 GHCVER=7.8.4 STACK_YAML=stack-7.8.yaml
#       compiler: ": #GHC 7.8.4"
#       addons: {apt: {packages: [cabal-install-1.24,ghc-7.8.4], sources: [hvr-ghc]}}
#
#     - env: BUILD=cabal CABALVER=1.22 GHCVER=7.10.3
#       compiler: ": #GHC 7.10.3"
#       addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.3], sources: [hvr-ghc]}}
#
#     - env: BUILD=cabal CABALVER=1.24 GHCVER=8.0.1
#       compiler: ": #GHC 8.0.1"
#       addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.1], sources: [hvr-ghc]}}
#
#     - env: BUILD=stack GHCVER=7.8.4 STACK_YAML=stack-7.8.yaml
#       compiler: ": #stack 7.8.4"
#       addons: {apt: {packages: [ghc-7.8.4], sources: [hvr-ghc]}}
#
#     - env: BUILD=stack STACK_YAML=stack.yaml
#       compiler: ": #stack 7.10.3 osx"
#       os: osx
#
#     - env: BUILD=stack GHCVER=8.0.1 STACK_YAML=stack-8.0.yaml
#       compiler: ": #stack 8.0.1"
#       addons: {apt: {packages: [ghc-8.0.1], sources: [hvr-ghc]}}
#
#     - env: BUILD=style GHCVER=8.0.1 STACK_YAML=stack-8.0.yaml
#       compiler: ": #stack 8.0.1"
#       addons: {apt: {packages: [ghc-8.0.1], sources: [hvr-ghc]}}
#
#   allow_failures:
#     - env: BUILD=stack STACK_YAML=stack.yaml
#       compiler: ": #stack 7.10.3 osx"
#       os: osx
#


# install:
#  - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
#  - case "$BUILD" in
#      style)
#        stack --no-terminal install hlint;;
#      stack)
#        stack --no-terminal test --only-dependencies;;
#      cabal)
#        cabal --version;
#        travis_retry cabal update;
#        rm -f $HOME/.cabal/bin/stack;
#        echo "stack is located at $(which stack)";
#        stack --version;
#        rm -f $(stack --compiler=ghc-$GHCVER path --dist-dir)/stack-*.tar.gz &&
#        stack --compiler=ghc-$GHCVER sdist --pvp-bounds=both &&
#        tar xf $(stack --compiler=ghc-$GHCVER path --dist-dir)/stack-*.tar.gz --wildcards --strip-components=1 '*/stack.cabal' &&
#        cabal install --only-dependencies --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1;;
#    esac
#
# script:
#  - set -e; case "$BUILD" in
#      style)
#        hlint src/ test/ --cpp-simple --hint=HLint.hs;
#        stack --no-terminal build --pedantic;;
#      stack)
#        stack --no-terminal test --haddock --no-haddock-deps --ghc-options="-Werror";;
#      cabal)
#        cabal configure --enable-tests --enable-benchmarks -v2 --ghc-options="-O0 -Werror";
#        cabal build;
#        cabal test;
#        cabal check;
#        cabal sdist;
#        cabal copy;
#        cd test/integration;
#        true stack setup --compiler=ghc-$GHCVER;
#        true stack test --compiler=ghc-$GHCVER;
#        cd ../..;
#        SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz &&
#        (cd dist && cabal install --force-reinstalls "$SRC_TGZ");;
#    esac
